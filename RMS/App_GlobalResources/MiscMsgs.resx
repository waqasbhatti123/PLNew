<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="branchAlreadyExist" xml:space="preserve">
    <value>Branch already exists</value>
  </data>
  <data name="busAreaAlreadyExist" xml:space="preserve">
    <value>Business Type already exists</value>
  </data>
  <data name="cityAlreadyExist" xml:space="preserve">
    <value>tblCity already exists</value>
  </data>
  <data name="contactPersonAlreadyExist" xml:space="preserve">
    <value>Contact Person already exists</value>
  </data>
  <data name="custLocAlreadyExist" xml:space="preserve">
    <value>Customer Location already exists</value>
  </data>
  <data name="customerAlreadyExist" xml:space="preserve">
    <value>Customer already exists</value>
  </data>
  <data name="howFoundAlreadyExist" xml:space="preserve">
    <value>How Found already exists</value>
  </data>
  <data name="oldPwdNotMatches" xml:space="preserve">
    <value>Old password mismatched</value>
  </data>
  <data name="oppAlreadyExist" xml:space="preserve">
    <value>Opportunity already exists</value>
  </data>
  <data name="oppProdAlreadyExist" xml:space="preserve">
    <value>Opportunity Product already exists</value>
  </data>
  <data name="prodCatAlreadyExist" xml:space="preserve">
    <value>Business Unit already exists</value>
  </data>
  <data name="prodSubCatAlreadyExist" xml:space="preserve">
    <value>Type Series already exists</value>
  </data>
  <data name="prodTitleAlreadyExist" xml:space="preserve">
    <value>Product Title already exists</value>
  </data>
  <data name="prodTypeAlreadyExist" xml:space="preserve">
    <value>Product Type already exists</value>
  </data>
  <data name="regionAlreadyExist" xml:space="preserve">
    <value>Region already exists</value>
  </data>
  <data name="salesTeamAlreadyExist" xml:space="preserve">
    <value>Sales Team already exists</value>
  </data>
  <data name="sbfAlreadyExist" xml:space="preserve">
    <value>SBF already exists</value>
  </data>
  <data name="selectOpportunity" xml:space="preserve">
    <value>Please first select the opportunity</value>
  </data>
  <data name="sgmntAlreadyExist" xml:space="preserve">
    <value>Segment already exists</value>
  </data>
  <data name="userAlreadyExist" xml:space="preserve">
    <value>User already exists</value>
  </data>
  <data name="userGroupAlreadyExist" xml:space="preserve">
    <value>User Group already exists</value>
  </data>
  <data name="userQuestionAlreadyExist" xml:space="preserve">
    <value>Question already exists</value>
  </data>
  <data name="usrRoleAlreadyExist" xml:space="preserve">
    <value>User Role already exists</value>
  </data>
  <data name="visPlanAlreadyExist" xml:space="preserve">
    <value>Visit Plan No already exists</value>
  </data>
  <data name="visPlanDetAlreadyExist" xml:space="preserve">
    <value>Visit Plan Detail already exists</value>
  </data>
  <data name="QuestionsDuplication" xml:space="preserve">
    <value>Response at this stage has already been added into system</value>
  </data>
  <data name="QuartersTotalCheck" xml:space="preserve">
    <value>Total of Q1, Q2, Q3 and Q4 is not equal to Target Value Total</value>
  </data>
  <data name="OppNotSelected" xml:space="preserve">
    <value>Please select the opportunity</value>
  </data>
  <data name="QuarterTotalCheck" xml:space="preserve">
    <value>Month target excedes from its quarter total</value>
  </data>
  <data name="CountryAlreadyExist" xml:space="preserve">
    <value>Country already exists</value>
  </data>
  <data name="OppProdProgWonNone" xml:space="preserve">
    <value>At least one product's status should be won</value>
  </data>
  <data name="PnANotSelected" xml:space="preserve">
    <value>P&amp;A Team Member is not selected</value>
  </data>
  <data name="OppProdProgWonInProgNone" xml:space="preserve">
    <value>At least one product's status should be Won or In Progress from all products of this opportunity</value>
  </data>
  <data name="salesTargetEmployeeExceed" xml:space="preserve">
    <value>Member target value cannot be greater than month target value</value>
  </data>
  <data name="SalesTargetAlreadyExist" xml:space="preserve">
    <value>Sales Target already exists</value>
  </data>
  <data name="customerHOAlreadyExist" xml:space="preserve">
    <value>Customer's Head Office already added</value>
  </data>
  <data name="empAlreadyExist" xml:space="preserve">
    <value>Employ Already Exist</value>
  </data>
  <data name="departmentAlreadyExist" xml:space="preserve">
    <value>Department Already Exist</value>
  </data>
  <data name="designationAlreadyExist" xml:space="preserve">
    <value>Designation Already Exist</value>
  </data>
  <data name="divisionAlreadyExist" xml:space="preserve">
    <value>Division Already Exist</value>
  </data>
  <data name="locationAlreadyExist" xml:space="preserve">
    <value>Location Already Exist</value>
  </data>
  <data name="FileAlreadyExixt" xml:space="preserve">
    <value>File Already has been uploaded</value>
  </data>
  <data name="UploadSuccess" xml:space="preserve">
    <value>Data has uploaded successfully</value>
  </data>
  <data name="EmpAlreadyTakenLeave" xml:space="preserve">
    <value>This Employee have already taken the leaves in these days</value>
  </data>
  <data name="SectionAlreadyExist" xml:space="preserve">
    <value>Section already exists</value>
  </data>
  <data name="EnterValidDates" xml:space="preserve">
    <value>End Date should be greater then Start Date</value>
  </data>
  <data name="AprovedGraterThenClaim" xml:space="preserve">
    <value>Aproved Amount Should be Grater Then Claim Amount</value>
  </data>
  <data name="EffdateGraterThenReffdate" xml:space="preserve">
    <value>Effective Date Should be Grater then Reference Date</value>
  </data>
  <data name="EnterLeaveType" xml:space="preserve">
    <value>Please Select Leave Type</value>
  </data>
  <data name="userBankAlreadyExist" xml:space="preserve">
    <value>Bank code/name already exists</value>
  </data>
  <data name="NoRecord" xml:space="preserve">
    <value>No Record found !!!!</value>
  </data>
  <data name="RecordExist" xml:space="preserve">
    <value>Record Already Exist !!!</value>
  </data>
</root>